import 'package:bunsep/templates/colour_template.dart';
import 'package:flutter/material.dart';

class TextStyleTemplate {
  static TextStyle mediumDark({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  }) {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.dark,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumLight({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.light,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumTeal({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.teal,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle mediumRed({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.red,
      fontWeight: FontWeight.w600,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldDark({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.dark,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldLight({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.light,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldTeal({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.teal,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle boldRed({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.red,
      fontWeight: FontWeight.bold,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularDark({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.dark,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularLight({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.light,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularTeal({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.teal,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }

  static TextStyle regularRed({
    required double size,
    TextDecoration? textDecoration,
    Color? backgroundColor,
    FontStyle? fontStyle,
    double? letterSpacing,
    double? wordSpacing,
    Color? decorationColor,
    TextDecorationStyle? decorationStyle,
    TextOverflow? overflow,
    double? decorationThickness,
    String? fontFamily,
    TextBaseline? textBaseline,
    double? height,
    List<Shadow>? shadows,
  })  {
    return TextStyle(
      fontSize: size,
      color: ColourTemplate.red,
      fontWeight: FontWeight.w400,
      decoration: textDecoration,
      backgroundColor: backgroundColor,
      fontStyle: fontStyle,
      letterSpacing: letterSpacing,
      wordSpacing: wordSpacing,
      decorationColor: decorationColor,
      decorationStyle: decorationStyle,
      overflow: overflow,
      decorationThickness: decorationThickness,
      fontFamily: fontFamily,
      textBaseline: textBaseline,
      height: height,
      shadows: shadows,
    );
  }
}